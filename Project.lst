Microsoft (R) Macro Assembler Version 14.10.25019.0	    10/24/17 16:58:59
4Sum of Negative Numbers     (EmmetCookeProgram3.asm	     Page 1 - 1


				TITLE Sum of Negative Numbers     (EmmetCookeProgram3.asm)

				; Author: Emmet Cooke	
				; Course / Project ID : cs271 / Program 3         Date: 10/23/2017
				; Description: This program asks the users for a series of negative numbers between
				; -100 and -1. It will continue to prompt them for numbers until they enter a non-negative
				; number. Then it will display the sum and average of the entered numbers.
				; EC #1: This program displays a number as the user enters them

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; Constant Definitions
 =-00000064			LOWER_LIMIT = -100

 00000000			.data
					; Strings to display the programmers name and the program title
 00000000 50 72 6F 67 72		programTitle		BYTE	"Program: Sum of Negative Numbers",0
	   61 6D 3A 20 53
	   75 6D 20 6F 66
	   20 4E 65 67 61
	   74 69 76 65 20
	   4E 75 6D 62 65
	   72 73 00
 00000021 41 75 74 68 6F		programmerName		BYTE	"Author : Emmet Cooke",0
	   72 20 3A 20 45
	   6D 6D 65 74 20
	   43 6F 6F 6B 65
	   00
 00000036 45 43 23 31 3A		extraCredit1		BYTE	"EC#1: This program numbers the lines during input.",0
	   20 54 68 69 73
	   20 70 72 6F 67
	   72 61 6D 20 6E
	   75 6D 62 65 72
	   73 20 74 68 65
	   20 6C 69 6E 65
	   73 20 64 75 72
	   69 6E 67 20 69
	   6E 70 75 74 2E
	   00

					; Variables to get the users name, store the input, and greet them
 00000069 57 68 61 74 27		namePrompt			BYTE	"What's your name? ",0
	   73 20 79 6F 75
	   72 20 6E 61 6D
	   65 3F 20 00
 0000007C  00000015 [			userName			BYTE	21 DUP(0)
	    00
	   ]
 00000091 00000000			userNameSize		DWORD	?
 00000095 48 65 6C 6C 6F		greeting			BYTE	"Hello, ",0
	   2C 20 00

					; Strings to instruct the user
 0000009D 54 68 69 73 20		instruction			BYTE	"This program will average a sum of numbers between -100 and -1.", 0ah
	   70 72 6F 67 72
	   61 6D 20 77 69
	   6C 6C 20 61 76
	   65 72 61 67 65
	   20 61 20 73 75
	   6D 20 6F 66 20
	   6E 75 6D 62 65
	   72 73 20 62 65
	   74 77 65 65 6E
	   20 2D 31 30 30
	   20 61 6E 64 20
	   2D 31 2E 0A
 000000DD  49 74 20 77 69							BYTE	"It will continue to ask you to enter a number in this range",0ah
	   6C 6C 20 63 6F
	   6E 74 69 6E 75
	   65 20 74 6F 20
	   61 73 6B 20 79
	   6F 75 20 74 6F
	   20 65 6E 74 65
	   72 20 61 20 6E
	   75 6D 62 65 72
	   20 69 6E 20 74
	   68 69 73 20 72
	   61 6E 67 65 0A
 00000119  75 6E 74 69 6C							BYTE	"until a non-negative number is entered.", 0ah
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 69 73
	   20 65 6E 74 65
	   72 65 64 2E 0A
 00000141  54 68 65 6E 2C							BYTE	"Then, it will output the sum and average of those values.",0
	   20 69 74 20 77
	   69 6C 6C 20 6F
	   75 74 70 75 74
	   20 74 68 65 20
	   73 75 6D 20 61
	   6E 64 20 61 76
	   65 72 61 67 65
	   20 6F 66 20 74
	   68 6F 73 65 20
	   76 61 6C 75 65
	   73 2E 00
 0000017B 50 6C 65 61 73		negativeNumPrompt	BYTE	"Please enter a number between -100 and -1. Enter 0 or greater to quit. ",0
	   65 20 65 6E 74
	   65 72 20 61 20
	   6E 75 6D 62 65
	   72 20 62 65 74
	   77 65 65 6E 20
	   2D 31 30 30 20
	   61 6E 64 20 2D
	   31 2E 20 45 6E
	   74 65 72 20 30
	   20 6F 72 20 67
	   72 65 61 74 65
	   72 20 74 6F 20
	   71 75 69 74 2E
	   20 00
 000001C3 54 68 61 74 20		belowNeg100Warn		BYTE	"That is below -100. ",0
	   69 73 20 62 65
	   6C 6F 77 20 2D
	   31 30 30 2E 20
	   00
 000001D8 4E 75 6D 62 65		numberString		BYTE	"Number ",0
	   72 20 00
 000001E0 3A 20 00			colon				BYTE	": ",0

					; Variables to hold the values input by the user
 000001E3 00000000			inputValue			DWORD	?
 000001E7 00000000			negativeSum			DWORD	0
 000001EB 00000001			numEntries			DWORD	1

					; Strings to display the results
 000001EF 59 6F 75 20 65		output0				BYTE	"You entered no numbers.",0
	   6E 74 65 72 65
	   64 20 6E 6F 20
	   6E 75 6D 62 65
	   72 73 2E 00
 00000207 59 6F 75 20 65		output1				BYTE	"You entered ",0
	   6E 74 65 72 65
	   64 20 00
 00000214 20 6E 75 6D 62		output2				BYTE	" numbers.",0
	   65 72 73 2E 00
 0000021E 53 75 6D 3A 20		sum					BYTE	"Sum: ",0
	   00
 00000224 41 76 65 72 61		average				BYTE	"Average: ",0
	   67 65 3A 20 00
 0000022E 2D 00				negativeSign		BYTE	"-",0

					; Goodbye message
 00000230 54 68 61 6E 6B		thanksMessage		BYTE	"Thanks for using this program, ",0
	   73 20 66 6F 72
	   20 75 73 69 6E
	   67 20 74 68 69
	   73 20 70 72 6F
	   67 72 61 6D 2C
	   20 00
 00000250 2E 20 47 6F 6F		goodbye				BYTE	". Goodbye!",0
	   64 62 79 65 21
	   00

 00000000			.code
 00000000			main PROC
					; Introduce the Programmer
 00000000  E8 000000DE			call	introduceProgrammer	
 00000005  BA 00000036 R		mov		edx, OFFSET extraCredit1
 0000000A  E8 00000000 E		call	WriteString
 0000000F  E8 00000000 E		call	Crlf
 00000014  E8 00000000 E		call	Crlf

					; Gets the users name and greets them
 00000019  E8 000000E6			call	getName				
 0000001E  E8 0000010B			call	greetUser			

					; Instruct the user on how to use the program
 00000023  E8 00000127			call	instructUser
 00000028  E8 00000000 E		call	Crlf

					; Get a number between -100 and -1 from the user
 0000002D			negNumLoop:
					; Prompts the user for a value
 0000002D  BA 000001D8 R		mov		edx, OFFSET numberString
 00000032  E8 00000000 E		call	WriteString
 00000037  A1 000001EB R		mov		eax, numEntries
 0000003C  E8 00000000 E		call	WriteDec
 00000041  BA 000001E0 R		mov		edx, OFFSET colon
 00000046  E8 00000000 E		call	WriteString
 0000004B  E8 00000000 E		call	ReadInt

					; Checks the value of the input int
 00000050  A3 000001E3 R		mov		inputValue, eax
 00000055  83 3D 000001E3 R		cmp		inputValue, 0		; non-negative has been entered
	   00
 0000005C  7D 31			jge		loopEnd

					; Check if the value is within range
 0000005E  83 3D 000001E3 R		cmp		inputValue, LOWER_LIMIT
	   9C
 00000065  73 02			jae		valueInRange
 00000067  EB 15			jmp		belowNegative100

					; The value is within range and it is added to the sum
 00000069			valueInRange:
 00000069  A1 000001E3 R		mov		eax, inputValue
 0000006E  F7 D8			neg		eax
 00000070  01 05 000001E7 R		add		negativeSum, eax
 00000076  FF 05 000001EB R		inc		numEntries
 0000007C  EB AF			jmp		negNumLoop

					; The value is below -100
 0000007E			belowNegative100:
 0000007E  BA 000001C3 R		mov		edx, OFFSET belowNeg100Warn
 00000083  E8 00000000 E		call	WriteString
 00000088  E8 00000000 E		call	Crlf
 0000008D  EB 9E			jmp		negNumLoop

 0000008F			loopEnd:

				; Display sum and average
 0000008F  83 3D 000001EB R		cmp		numEntries, 1
	   01
 00000096  74 30			je		noEntries
					; if 1 or more entry
 00000098  BA 00000207 R		mov		edx, OFFSET output1
 0000009D  E8 00000000 E		call	WriteString
 000000A2  A1 000001EB R		mov		eax, numEntries
 000000A7  48				dec		eax
 000000A8  E8 00000000 E		call	WriteDec
 000000AD  BA 00000214 R		mov		edx, OFFSET output2
 000000B2  E8 00000000 E		call	WriteString
 000000B7  E8 00000000 E		call	Crlf

					; Sum
 000000BC  E8 000000AF			call	displaySum

					; Average
 000000C1  E8 000000D2			call	displayAverage
 000000C6  EB 0F			jmp		endProgram

 000000C8			noEntries:
 000000C8  BA 000001EF R		mov		edx, OFFSET output0
 000000CD  E8 00000000 E		call	WriteString
 000000D2  E8 00000000 E		call	Crlf

 000000D7			endProgram:
 000000D7  E8 000000F6			call	displayGoodbye

					exit	; exits to operating system
 000000DC  6A 00	   *	    push   +000000000h
 000000DE  E8 00000000 E   *	    call   ExitProcess
 000000E3			main ENDP


				;-------------------------------------
				; Procedure to introduce the programmer
				; recieves: none
				; returns: none
				; preconditions: none
				; registers changed: edx
				;-------------------------------------
 000000E3			introduceProgrammer PROC USES edx
 000000E3  52		   *	    push   edx
 000000E4  BA 00000000 R		mov		edx, OFFSET programTitle
 000000E9  E8 00000000 E		call	WriteString
 000000EE  E8 00000000 E		call	Crlf
 000000F3  BA 00000021 R		mov		edx, OFFSET programmerName
 000000F8  E8 00000000 E		call	WriteString
 000000FD  E8 00000000 E		call	Crlf
					ret
 00000102  5A		   *	    pop    edx
 00000103  C3		   *	    ret    00000h
 00000104			introduceProgrammer ENDP

				;-------------------------------------
				; Procedure to get the users name
				; recieves: none
				; returns: user input for the global variable userName
				; preconditions: none
				; registers changed: eax, ecx, edx
				;-------------------------------------
 00000104			getName PROC USES eax ecx edx
 00000104  50		   *	    push   eax
 00000105  51		   *	    push   ecx
 00000106  52		   *	    push   edx
 00000107  BA 00000069 R		mov		edx, OFFSET namePrompt
 0000010C  E8 00000000 E		call	WriteString
 00000111  BA 0000007C R		mov		edx, OFFSET userName
 00000116  B9 00000015			mov		ecx, SIZEOF	userName
 0000011B  E8 00000000 E		call	ReadString
 00000120  A3 00000091 R		mov		userNameSize, eax
 00000125  E8 00000000 E		call	Crlf
					ret
 0000012A  5A		   *	    pop    edx
 0000012B  59		   *	    pop    ecx
 0000012C  58		   *	    pop    eax
 0000012D  C3		   *	    ret    00000h
 0000012E			getName ENDP

				;-------------------------------------
				; Procedure to greet the user
				; recieves: none
				; returns: none
				; preconditions: none
				; registers changed: edx
				;-------------------------------------
 0000012E			greetUser PROC USES edx
 0000012E  52		   *	    push   edx
 0000012F  BA 00000095 R		mov		edx, OFFSET greeting
 00000134  E8 00000000 E		call	WriteString
 00000139  BA 0000007C R		mov		edx, OFFSET userName
 0000013E  E8 00000000 E		call	WriteString
 00000143  E8 00000000 E		call	Crlf
 00000148  E8 00000000 E		call	Crlf
					ret
 0000014D  5A		   *	    pop    edx
 0000014E  C3		   *	    ret    00000h
 0000014F			greetUser ENDP

				;-------------------------------------
				; Procedure to instruct the user on how to proceed
				; recieves: none
				; returns: none
				; preconditions: none
				; registers changed: edx
				;-------------------------------------
 0000014F			instructUser PROC USES edx
 0000014F  52		   *	    push   edx
 00000150  BA 0000009D R		mov		edx, OFFSET instruction
 00000155  E8 00000000 E		call	WriteString
 0000015A  E8 00000000 E		call	Crlf
 0000015F  BA 0000017B R		mov		edx, OFFSET negativeNumPrompt
 00000164  E8 00000000 E		call	WriteString
 00000169  E8 00000000 E		call	Crlf
					ret
 0000016E  5A		   *	    pop    edx
 0000016F  C3		   *	    ret    00000h
 00000170			instructUser ENDP

				;-------------------------------------
				; Procedure to display sum
				; recieves: none
				; returns: none
				; preconditions: none
				; registers changed: eax edx
				;-------------------------------------
 00000170			displaySum PROC USES eax edx
 00000170  50		   *	    push   eax
 00000171  52		   *	    push   edx
 00000172  BA 0000021E R		mov		edx, OFFSET sum
 00000177  E8 00000000 E		call	WriteString
 0000017C  BA 0000022E R		mov		edx, OFFSET negativeSign
 00000181  E8 00000000 E		call	WriteString
 00000186  A1 000001E7 R		mov		eax, negativeSum
 0000018B  E8 00000000 E		call	WriteDec
 00000190  E8 00000000 E		call	Crlf
					ret
 00000195  5A		   *	    pop    edx
 00000196  58		   *	    pop    eax
 00000197  C3		   *	    ret    00000h
 00000198			displaySum ENDP

				;-------------------------------------
				; Procedure to display average
				; recieves: none
				; returns: none
				; preconditions: none
				; registers changed: eax, ebx, edx
				;-------------------------------------
 00000198			displayAverage PROC USES eax ebx edx 
 00000198  50		   *	    push   eax
 00000199  53		   *	    push   ebx
 0000019A  52		   *	    push   edx
 0000019B  BA 00000224 R		mov		edx, OFFSET average
 000001A0  E8 00000000 E		call	WriteString
 000001A5  BA 0000022E R		mov		edx, OFFSET negativeSign
 000001AA  E8 00000000 E		call	WriteString
 000001AF  FF 0D 000001EB R		dec		numEntries
 000001B5  8B 1D 000001EB R		mov		ebx, numEntries
 000001BB  33 D2			xor		edx, edx
 000001BD  A1 000001E7 R		mov		eax, negativeSum
 000001C2  F7 F3			div		ebx
 000001C4  E8 00000000 E		call	WriteDec
 000001C9  E8 00000000 E		call	Crlf
					ret
 000001CE  5A		   *	    pop    edx
 000001CF  5B		   *	    pop    ebx
 000001D0  58		   *	    pop    eax
 000001D1  C3		   *	    ret    00000h
 000001D2			displayAverage ENDP

				;-------------------------------------
				; Procedure to display goodbye Message
				; recieves: none
				; returns: none
				; preconditions: there is a userName variable
				; registers changed: edx
				;-------------------------------------
 000001D2			displayGoodbye PROC USES edx
 000001D2  52		   *	    push   edx
 000001D3  BA 00000230 R		mov		edx, OFFSET thanksMessage
 000001D8  E8 00000000 E		call	WriteString
 000001DD  BA 0000007C R		mov		edx, OFFSET userName
 000001E2  E8 00000000 E		call	WriteString
 000001E7  BA 00000250 R		mov		edx, OFFSET goodbye
 000001EC  E8 00000000 E		call	WriteString
 000001F1  E8 00000000 E		call	Crlf
					ret
 000001F6  5A		   *	    pop    edx
 000001F7  C3		   *	    ret    00000h
 000001F8			displayGoodbye ENDP

				END main
Microsoft (R) Macro Assembler Version 14.10.25019.0	    10/24/17 16:58:59
4Sum of Negative Numbers     (EmmetCookeProgram3.asm	     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000025B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001F8 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
displayAverage . . . . . . . . .	P Near	 00000198 _TEXT	Length= 0000003A Public STDCALL
displayGoodbye . . . . . . . . .	P Near	 000001D2 _TEXT	Length= 00000026 Public STDCALL
displaySum . . . . . . . . . . .	P Near	 00000170 _TEXT	Length= 00000028 Public STDCALL
getName  . . . . . . . . . . . .	P Near	 00000104 _TEXT	Length= 0000002A Public STDCALL
greetUser  . . . . . . . . . . .	P Near	 0000012E _TEXT	Length= 00000021 Public STDCALL
instructUser . . . . . . . . . .	P Near	 0000014F _TEXT	Length= 00000021 Public STDCALL
introduceProgrammer  . . . . . .	P Near	 000000E3 _TEXT	Length= 00000021 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000E3 Public STDCALL
  negNumLoop . . . . . . . . . .	L Near	 0000002D _TEXT	
  valueInRange . . . . . . . . .	L Near	 00000069 _TEXT	
  belowNegative100 . . . . . . .	L Near	 0000007E _TEXT	
  loopEnd  . . . . . . . . . . .	L Near	 0000008F _TEXT	
  noEntries  . . . . . . . . . .	L Near	 000000C8 _TEXT	
  endProgram . . . . . . . . . .	L Near	 000000D7 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOWER_LIMIT  . . . . . . . . . .	Number	 -00000064h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
average  . . . . . . . . . . . .	Byte	 00000224 _DATA	
belowNeg100Warn  . . . . . . . .	Byte	 000001C3 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
colon  . . . . . . . . . . . . .	Byte	 000001E0 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
extraCredit1 . . . . . . . . . .	Byte	 00000036 _DATA	
goodbye  . . . . . . . . . . . .	Byte	 00000250 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
greeting . . . . . . . . . . . .	Byte	 00000095 _DATA	
inputValue . . . . . . . . . . .	DWord	 000001E3 _DATA	
instruction  . . . . . . . . . .	Byte	 0000009D _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
namePrompt . . . . . . . . . . .	Byte	 00000069 _DATA	
negativeNumPrompt  . . . . . . .	Byte	 0000017B _DATA	
negativeSign . . . . . . . . . .	Byte	 0000022E _DATA	
negativeSum  . . . . . . . . . .	DWord	 000001E7 _DATA	
numEntries . . . . . . . . . . .	DWord	 000001EB _DATA	
numberString . . . . . . . . . .	Byte	 000001D8 _DATA	
output0  . . . . . . . . . . . .	Byte	 000001EF _DATA	
output1  . . . . . . . . . . . .	Byte	 00000207 _DATA	
output2  . . . . . . . . . . . .	Byte	 00000214 _DATA	
programTitle . . . . . . . . . .	Byte	 00000000 _DATA	
programmerName . . . . . . . . .	Byte	 00000021 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
sum  . . . . . . . . . . . . . .	Byte	 0000021E _DATA	
thanksMessage  . . . . . . . . .	Byte	 00000230 _DATA	
userNameSize . . . . . . . . . .	DWord	 00000091 _DATA	
userName . . . . . . . . . . . .	Byte	 0000007C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
